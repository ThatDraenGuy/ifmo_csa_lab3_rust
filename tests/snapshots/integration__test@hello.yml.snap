---
source: tests/integration.rs
expression: result
input_file: tests/inputs/hello.yml
---
translator_output: |-
  (
      code: [
          Data((5)),
          Data((72)),
          Data((101)),
          Data((108)),
          Data((108)),
          Data((111)),
          OpHigher(Math((
              opcode: Mov,
              args: RegImmed(Data, 0),
          ))),
          OpLower(MathOpLower(RegImmed(1))),
          OpHigher(Math((
              opcode: Mov,
              args: RegMemToReg(Count, Data),
          ))),
          OpHigher(Alter((
              opcode: Inc,
              arg: Data,
          ))),
          OpHigher(Math((
              opcode: Mov,
              args: RegMemToReg(Accumulator, Data),
          ))),
          OpHigher(Io((
              opcode: Out,
              arg: 1,
          ))),
          OpHigher(Alter((
              opcode: Dec,
              arg: Count,
          ))),
          OpHigher(Branch((
              opcode: Jnz,
              arg_higher: 0,
          ))),
          OpLower(BranchOpLower((
              arg_lower: 10,
          ))),
          OpHigher(Control((Exit))),
      ],
      entrypoint: (7),
  )
translator_result: OK
stdout: Hello
machine_result: OK
log: |
  [DEBUG lab3_rust::translator] Starting translation process
  [DEBUG lab3_rust::translator] Successfully finished translation process
  [DEBUG lab3_rust::machine] Starting virtual machine
  [DEBUG lab3_rust::machine::control_unit] TICK:    9; REGS: eax:   0, ecx:   0, edx:   0, eip:   8, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegImmed(Data, 0) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   14; REGS: eax:   0, ecx:   0, edx:   1, eip:   9, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Count, Data) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   21; REGS: eax:   0, ecx:   5, edx:   1, eip:  10, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   26; REGS: eax:   0, ecx:   5, edx:   2, eip:  11, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   33; REGS: eax:  72, ecx:   5, edx:   2, eip:  12, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   38; REGS: eax:  72, ecx:   5, edx:   2, eip:  13, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   48; REGS: eax:  72, ecx:   4, edx:   2, eip:  15, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jnz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   52; REGS: eax:  72, ecx:   4, edx:   2, eip:  10, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   57; REGS: eax:  72, ecx:   4, edx:   3, eip:  11, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   64; REGS: eax: 101, ecx:   4, edx:   3, eip:  12, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   69; REGS: eax: 101, ecx:   4, edx:   3, eip:  13, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   79; REGS: eax: 101, ecx:   3, edx:   3, eip:  15, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jnz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   83; REGS: eax: 101, ecx:   3, edx:   3, eip:  10, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   88; REGS: eax: 101, ecx:   3, edx:   4, eip:  11, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   95; REGS: eax: 108, ecx:   3, edx:   4, eip:  12, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  100; REGS: eax: 108, ecx:   3, edx:   4, eip:  13, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  110; REGS: eax: 108, ecx:   2, edx:   4, eip:  15, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jnz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  114; REGS: eax: 108, ecx:   2, edx:   4, eip:  10, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  119; REGS: eax: 108, ecx:   2, edx:   5, eip:  11, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  126; REGS: eax: 108, ecx:   2, edx:   5, eip:  12, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  131; REGS: eax: 108, ecx:   2, edx:   5, eip:  13, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  141; REGS: eax: 108, ecx:   1, edx:   5, eip:  15, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jnz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  145; REGS: eax: 108, ecx:   1, edx:   5, eip:  10, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  150; REGS: eax: 108, ecx:   1, edx:   6, eip:  11, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  157; REGS: eax: 111, ecx:   1, edx:   6, eip:  12, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  162; REGS: eax: 111, ecx:   1, edx:   6, eip:  13, esp:   0; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  172; REGS: eax: 111, ecx:   0, edx:   6, eip:  15, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jnz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  177; REGS: eax: 111, ecx:   0, edx:   6, eip:  16, esp:   0; INSTR: OpHigher(Control(ControlOpWord(Exit)))

