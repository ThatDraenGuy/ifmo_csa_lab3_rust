---
source: tests/integration.rs
expression: result
input_file: tests/inputs/cat.yml
---
translator_output: |-
  (
      code: [
          OpHigher(Io((
              opcode: In,
              arg: 0,
          ))),
          OpHigher(Math((
              opcode: Cmp,
              args: RegImmed(Accumulator, 0),
          ))),
          OpLower(MathOpLower(RegImmed(0))),
          OpHigher(Branch((
              opcode: Jz,
              arg_higher: 0,
          ))),
          OpLower(BranchOpLower((
              arg_lower: 9,
          ))),
          OpHigher(Io((
              opcode: Out,
              arg: 1,
          ))),
          OpHigher(Branch((
              opcode: Jmp,
              arg_higher: 0,
          ))),
          OpLower(BranchOpLower((
              arg_lower: 1,
          ))),
          OpHigher(Control((Exit))),
      ],
      entrypoint: (1),
  )
translator_result: OK
stdout: foo
machine_result: OK
log: |
  [DEBUG lab3_rust::translator] Starting translation process
  [DEBUG lab3_rust::translator] Successfully finished translation process
  [DEBUG lab3_rust::machine] Starting virtual machine
  [DEBUG lab3_rust::machine::control_unit] TICK:    4; REGS: eax:   0, ecx:   0, edx:   0, eip:   1, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: In, arg: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   14; REGS: eax: 102, ecx:   0, edx:   0, eip:   3, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Cmp, args: RegImmed(Accumulator, 0) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   24; REGS: eax: 102, ecx:   0, edx:   0, eip:   5, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   29; REGS: eax: 102, ecx:   0, edx:   0, eip:   6, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   39; REGS: eax: 102, ecx:   0, edx:   0, eip:   8, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   43; REGS: eax: 102, ecx:   0, edx:   0, eip:   1, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: In, arg: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   53; REGS: eax: 111, ecx:   0, edx:   0, eip:   3, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Cmp, args: RegImmed(Accumulator, 0) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   63; REGS: eax: 111, ecx:   0, edx:   0, eip:   5, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   68; REGS: eax: 111, ecx:   0, edx:   0, eip:   6, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   78; REGS: eax: 111, ecx:   0, edx:   0, eip:   8, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   82; REGS: eax: 111, ecx:   0, edx:   0, eip:   1, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: In, arg: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:   92; REGS: eax: 111, ecx:   0, edx:   0, eip:   3, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Cmp, args: RegImmed(Accumulator, 0) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  102; REGS: eax: 111, ecx:   0, edx:   0, eip:   5, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  107; REGS: eax: 111, ecx:   0, edx:   0, eip:   6, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  117; REGS: eax: 111, ecx:   0, edx:   0, eip:   8, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  121; REGS: eax: 111, ecx:   0, edx:   0, eip:   1, esp:   0; INSTR: OpHigher(Io(IoOpWord { opcode: In, arg: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  131; REGS: eax:   0, ecx:   0, edx:   0, eip:   3, esp:   0; INSTR: OpHigher(Math(MathOpHigher { opcode: Cmp, args: RegImmed(Accumulator, 0) }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  141; REGS: eax:   0, ecx:   0, edx:   0, eip:   5, esp:   0; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 }))
  [DEBUG lab3_rust::machine::control_unit] TICK:  145; REGS: eax:   0, ecx:   0, edx:   0, eip:   9, esp:   0; INSTR: OpHigher(Control(ControlOpWord(Exit)))

