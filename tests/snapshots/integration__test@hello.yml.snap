---
source: tests/integration.rs
expression: result
input_file: tests/inputs/hello.yml
---
translator_output: |-
  (
      code: [
          (
              debug_info: (
                  src_info: (
                      src_line: 1,
                      src_symb: 27,
                  ),
                  addr: (1),
              ),
              word: Data((13)),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 1,
                      src_symb: 27,
                  ),
                  addr: (2),
              ),
              word: Data((1819043144)),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 1,
                      src_symb: 27,
                  ),
                  addr: (3),
              ),
              word: Data((1998597231)),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 1,
                      src_symb: 27,
                  ),
                  addr: (4),
              ),
              word: Data((1684828783)),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 1,
                      src_symb: 27,
                  ),
                  addr: (5),
              ),
              word: Data((33)),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 4,
                      src_symb: 7,
                  ),
                  addr: (6),
              ),
              word: OpHigher(Math((
                  opcode: Mov,
                  args: RegImmed(Accumulator, 0),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 4,
                      src_symb: 7,
                  ),
                  addr: (7),
              ),
              word: OpLower(Math(RegImmed(1))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 5,
                      src_symb: 8,
                  ),
                  addr: (8),
              ),
              word: OpHigher(Stack((
                  opcode: Call,
                  args: Immed(0),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 5,
                      src_symb: 8,
                  ),
                  addr: (9),
              ),
              word: OpLower(Stack(Immed(11))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 6,
                      src_symb: 3,
                  ),
                  addr: (10),
              ),
              word: OpHigher(Control((Exit))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 9,
                      src_symb: 7,
                  ),
                  addr: (11),
              ),
              word: OpHigher(Math((
                  opcode: Mov,
                  args: RegToReg(Data, Accumulator),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 10,
                      src_symb: 7,
                  ),
                  addr: (12),
              ),
              word: OpHigher(Math((
                  opcode: Mov,
                  args: RegMemToReg(Count, Accumulator),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 11,
                      src_symb: 6,
                  ),
                  addr: (13),
              ),
              word: OpHigher(Branch((
                  opcode: Jz,
                  arg_higher: 0,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 11,
                      src_symb: 6,
                  ),
                  addr: (14),
              ),
              word: OpLower(Branch((
                  arg_lower: 30,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 14,
                      src_symb: 7,
                  ),
                  addr: (15),
              ),
              word: OpHigher(Alter((
                  opcode: Inc,
                  arg: Data,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 15,
                      src_symb: 7,
                  ),
                  addr: (16),
              ),
              word: OpHigher(Math((
                  opcode: Mov,
                  args: RegMemToReg(Accumulator, Data),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 16,
                      src_symb: 7,
                  ),
                  addr: (17),
              ),
              word: OpHigher(Math((
                  opcode: Mov,
                  args: RegImmed(Base, 0),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 16,
                      src_symb: 7,
                  ),
                  addr: (18),
              ),
              word: OpLower(Math(RegImmed(4))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 19,
                      src_symb: 7,
                  ),
                  addr: (19),
              ),
              word: OpHigher(Io((
                  opcode: Out,
                  arg: 1,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 21,
                      src_symb: 7,
                  ),
                  addr: (20),
              ),
              word: OpHigher(Alter((
                  opcode: Dec,
                  arg: Count,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 22,
                      src_symb: 6,
                  ),
                  addr: (21),
              ),
              word: OpHigher(Branch((
                  opcode: Jz,
                  arg_higher: 0,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 22,
                      src_symb: 6,
                  ),
                  addr: (22),
              ),
              word: OpLower(Branch((
                  arg_lower: 30,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 24,
                      src_symb: 7,
                  ),
                  addr: (23),
              ),
              word: OpHigher(Alter((
                  opcode: Dec,
                  arg: Base,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 25,
                      src_symb: 6,
                  ),
                  addr: (24),
              ),
              word: OpHigher(Branch((
                  opcode: Jz,
                  arg_higher: 0,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 25,
                      src_symb: 6,
                  ),
                  addr: (25),
              ),
              word: OpLower(Branch((
                  arg_lower: 15,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 27,
                      src_symb: 7,
                  ),
                  addr: (26),
              ),
              word: OpHigher(Math((
                  opcode: Shr,
                  args: RegImmed(Accumulator, 0),
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 27,
                      src_symb: 7,
                  ),
                  addr: (27),
              ),
              word: OpLower(Math(RegImmed(8))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 28,
                      src_symb: 7,
                  ),
                  addr: (28),
              ),
              word: OpHigher(Branch((
                  opcode: Jmp,
                  arg_higher: 0,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 28,
                      src_symb: 7,
                  ),
                  addr: (29),
              ),
              word: OpLower(Branch((
                  arg_lower: 19,
              ))),
          ),
          (
              debug_info: (
                  src_info: (
                      src_line: 31,
                      src_symb: 3,
                  ),
                  addr: (30),
              ),
              word: OpHigher(Stack((
                  opcode: Ret,
                  args: None,
              ))),
          ),
      ],
      entrypoint: (6),
  )
translator_result: OK
stdout: Hello, world!
machine_result: OK
log: |
  [DEBUG lab3_rust::translator] Starting translator
  [DEBUG lab3_rust::translator] Starting first pass
  [DEBUG lab3_rust::translator] Resolved 6 labels
  [DEBUG lab3_rust::translator] Starting second pass
  [DEBUG lab3_rust::translator] Built a program: from 31 lines of source code to 30 machine words (120 bytes)
  [DEBUG lab3_rust::translator] Successfully finished translation process
  [DEBUG lab3_rust::machine] Starting virtual machine
  [DEBUG lab3_rust::machine::control_unit] TICK:    9; REGS: eax:0x00000000, ebx:0x00000000, ecx:0x00000000, edx:0x00000000, eip:0x00000007, esp:0x00001000; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   19; REGS: eax:0x00000001, ebx:0x00000000, ecx:0x00000000, edx:0x00000000, eip:0x00000009, esp:0x00001000; FLAGS: F|F|F; INSTR: OpHigher(Stack(StackOpHigher { opcode: Call, args: Immed(0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   26; REGS: eax:0x00000001, ebx:0x00000000, ecx:0x00000000, edx:0x00000000, eip:0x0000000b, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegToReg(Data, Accumulator) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   31; REGS: eax:0x00000001, ebx:0x00000000, ecx:0x00000000, edx:0x00000001, eip:0x0000000c, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Count, Accumulator) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   43; REGS: eax:0x00000001, ebx:0x00000000, ecx:0x0000000d, edx:0x00000001, eip:0x0000000e, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   48; REGS: eax:0x00000001, ebx:0x00000000, ecx:0x0000000d, edx:0x00000001, eip:0x0000000f, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   53; REGS: eax:0x00000001, ebx:0x00000000, ecx:0x0000000d, edx:0x00000002, eip:0x00000010, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   65; REGS: eax:0x6c6c6548, ebx:0x00000000, ecx:0x0000000d, edx:0x00000002, eip:0x00000012, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegImmed(Base, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   70; REGS: eax:0x6c6c6548, ebx:0x00000004, ecx:0x0000000d, edx:0x00000002, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   75; REGS: eax:0x6c6c6548, ebx:0x00000004, ecx:0x0000000d, edx:0x00000002, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   85; REGS: eax:0x6c6c6548, ebx:0x00000004, ecx:0x0000000c, edx:0x00000002, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:   90; REGS: eax:0x6c6c6548, ebx:0x00000004, ecx:0x0000000c, edx:0x00000002, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  100; REGS: eax:0x6c6c6548, ebx:0x00000003, ecx:0x0000000c, edx:0x00000002, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  110; REGS: eax:0x6c6c6548, ebx:0x00000003, ecx:0x0000000c, edx:0x00000002, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  120; REGS: eax:0x006c6c65, ebx:0x00000003, ecx:0x0000000c, edx:0x00000002, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  124; REGS: eax:0x006c6c65, ebx:0x00000003, ecx:0x0000000c, edx:0x00000002, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  129; REGS: eax:0x006c6c65, ebx:0x00000003, ecx:0x0000000c, edx:0x00000002, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  139; REGS: eax:0x006c6c65, ebx:0x00000003, ecx:0x0000000b, edx:0x00000002, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  144; REGS: eax:0x006c6c65, ebx:0x00000003, ecx:0x0000000b, edx:0x00000002, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  154; REGS: eax:0x006c6c65, ebx:0x00000002, ecx:0x0000000b, edx:0x00000002, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  164; REGS: eax:0x006c6c65, ebx:0x00000002, ecx:0x0000000b, edx:0x00000002, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  174; REGS: eax:0x00006c6c, ebx:0x00000002, ecx:0x0000000b, edx:0x00000002, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  178; REGS: eax:0x00006c6c, ebx:0x00000002, ecx:0x0000000b, edx:0x00000002, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  183; REGS: eax:0x00006c6c, ebx:0x00000002, ecx:0x0000000b, edx:0x00000002, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  193; REGS: eax:0x00006c6c, ebx:0x00000002, ecx:0x0000000a, edx:0x00000002, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  198; REGS: eax:0x00006c6c, ebx:0x00000002, ecx:0x0000000a, edx:0x00000002, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  208; REGS: eax:0x00006c6c, ebx:0x00000001, ecx:0x0000000a, edx:0x00000002, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  218; REGS: eax:0x00006c6c, ebx:0x00000001, ecx:0x0000000a, edx:0x00000002, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  228; REGS: eax:0x0000006c, ebx:0x00000001, ecx:0x0000000a, edx:0x00000002, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  232; REGS: eax:0x0000006c, ebx:0x00000001, ecx:0x0000000a, edx:0x00000002, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  237; REGS: eax:0x0000006c, ebx:0x00000001, ecx:0x0000000a, edx:0x00000002, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  247; REGS: eax:0x0000006c, ebx:0x00000001, ecx:0x00000009, edx:0x00000002, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  252; REGS: eax:0x0000006c, ebx:0x00000001, ecx:0x00000009, edx:0x00000002, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  262; REGS: eax:0x0000006c, ebx:0x00000000, ecx:0x00000009, edx:0x00000002, eip:0x00000019, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  266; REGS: eax:0x0000006c, ebx:0x00000000, ecx:0x00000009, edx:0x00000002, eip:0x0000000f, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  271; REGS: eax:0x0000006c, ebx:0x00000000, ecx:0x00000009, edx:0x00000003, eip:0x00000010, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  283; REGS: eax:0x77202c6f, ebx:0x00000000, ecx:0x00000009, edx:0x00000003, eip:0x00000012, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegImmed(Base, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  288; REGS: eax:0x77202c6f, ebx:0x00000004, ecx:0x00000009, edx:0x00000003, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  293; REGS: eax:0x77202c6f, ebx:0x00000004, ecx:0x00000009, edx:0x00000003, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  303; REGS: eax:0x77202c6f, ebx:0x00000004, ecx:0x00000008, edx:0x00000003, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  308; REGS: eax:0x77202c6f, ebx:0x00000004, ecx:0x00000008, edx:0x00000003, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  318; REGS: eax:0x77202c6f, ebx:0x00000003, ecx:0x00000008, edx:0x00000003, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  328; REGS: eax:0x77202c6f, ebx:0x00000003, ecx:0x00000008, edx:0x00000003, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  338; REGS: eax:0x0077202c, ebx:0x00000003, ecx:0x00000008, edx:0x00000003, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  342; REGS: eax:0x0077202c, ebx:0x00000003, ecx:0x00000008, edx:0x00000003, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  347; REGS: eax:0x0077202c, ebx:0x00000003, ecx:0x00000008, edx:0x00000003, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  357; REGS: eax:0x0077202c, ebx:0x00000003, ecx:0x00000007, edx:0x00000003, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  362; REGS: eax:0x0077202c, ebx:0x00000003, ecx:0x00000007, edx:0x00000003, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  372; REGS: eax:0x0077202c, ebx:0x00000002, ecx:0x00000007, edx:0x00000003, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  382; REGS: eax:0x0077202c, ebx:0x00000002, ecx:0x00000007, edx:0x00000003, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  392; REGS: eax:0x00007720, ebx:0x00000002, ecx:0x00000007, edx:0x00000003, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  396; REGS: eax:0x00007720, ebx:0x00000002, ecx:0x00000007, edx:0x00000003, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  401; REGS: eax:0x00007720, ebx:0x00000002, ecx:0x00000007, edx:0x00000003, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  411; REGS: eax:0x00007720, ebx:0x00000002, ecx:0x00000006, edx:0x00000003, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  416; REGS: eax:0x00007720, ebx:0x00000002, ecx:0x00000006, edx:0x00000003, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  426; REGS: eax:0x00007720, ebx:0x00000001, ecx:0x00000006, edx:0x00000003, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  436; REGS: eax:0x00007720, ebx:0x00000001, ecx:0x00000006, edx:0x00000003, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  446; REGS: eax:0x00000077, ebx:0x00000001, ecx:0x00000006, edx:0x00000003, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  450; REGS: eax:0x00000077, ebx:0x00000001, ecx:0x00000006, edx:0x00000003, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  455; REGS: eax:0x00000077, ebx:0x00000001, ecx:0x00000006, edx:0x00000003, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  465; REGS: eax:0x00000077, ebx:0x00000001, ecx:0x00000005, edx:0x00000003, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  470; REGS: eax:0x00000077, ebx:0x00000001, ecx:0x00000005, edx:0x00000003, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  480; REGS: eax:0x00000077, ebx:0x00000000, ecx:0x00000005, edx:0x00000003, eip:0x00000019, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  484; REGS: eax:0x00000077, ebx:0x00000000, ecx:0x00000005, edx:0x00000003, eip:0x0000000f, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  489; REGS: eax:0x00000077, ebx:0x00000000, ecx:0x00000005, edx:0x00000004, eip:0x00000010, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  501; REGS: eax:0x646c726f, ebx:0x00000000, ecx:0x00000005, edx:0x00000004, eip:0x00000012, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegImmed(Base, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  506; REGS: eax:0x646c726f, ebx:0x00000004, ecx:0x00000005, edx:0x00000004, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  511; REGS: eax:0x646c726f, ebx:0x00000004, ecx:0x00000005, edx:0x00000004, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  521; REGS: eax:0x646c726f, ebx:0x00000004, ecx:0x00000004, edx:0x00000004, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  526; REGS: eax:0x646c726f, ebx:0x00000004, ecx:0x00000004, edx:0x00000004, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  536; REGS: eax:0x646c726f, ebx:0x00000003, ecx:0x00000004, edx:0x00000004, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  546; REGS: eax:0x646c726f, ebx:0x00000003, ecx:0x00000004, edx:0x00000004, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  556; REGS: eax:0x00646c72, ebx:0x00000003, ecx:0x00000004, edx:0x00000004, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  560; REGS: eax:0x00646c72, ebx:0x00000003, ecx:0x00000004, edx:0x00000004, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  565; REGS: eax:0x00646c72, ebx:0x00000003, ecx:0x00000004, edx:0x00000004, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  575; REGS: eax:0x00646c72, ebx:0x00000003, ecx:0x00000003, edx:0x00000004, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  580; REGS: eax:0x00646c72, ebx:0x00000003, ecx:0x00000003, edx:0x00000004, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  590; REGS: eax:0x00646c72, ebx:0x00000002, ecx:0x00000003, edx:0x00000004, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  600; REGS: eax:0x00646c72, ebx:0x00000002, ecx:0x00000003, edx:0x00000004, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  610; REGS: eax:0x0000646c, ebx:0x00000002, ecx:0x00000003, edx:0x00000004, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  614; REGS: eax:0x0000646c, ebx:0x00000002, ecx:0x00000003, edx:0x00000004, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  619; REGS: eax:0x0000646c, ebx:0x00000002, ecx:0x00000003, edx:0x00000004, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  629; REGS: eax:0x0000646c, ebx:0x00000002, ecx:0x00000002, edx:0x00000004, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  634; REGS: eax:0x0000646c, ebx:0x00000002, ecx:0x00000002, edx:0x00000004, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  644; REGS: eax:0x0000646c, ebx:0x00000001, ecx:0x00000002, edx:0x00000004, eip:0x00000019, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  654; REGS: eax:0x0000646c, ebx:0x00000001, ecx:0x00000002, edx:0x00000004, eip:0x0000001b, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Math(MathOpHigher { opcode: Shr, args: RegImmed(Accumulator, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  664; REGS: eax:0x00000064, ebx:0x00000001, ecx:0x00000002, edx:0x00000004, eip:0x0000001d, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jmp, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  668; REGS: eax:0x00000064, ebx:0x00000001, ecx:0x00000002, edx:0x00000004, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  673; REGS: eax:0x00000064, ebx:0x00000001, ecx:0x00000002, edx:0x00000004, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  683; REGS: eax:0x00000064, ebx:0x00000001, ecx:0x00000001, edx:0x00000004, eip:0x00000016, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  688; REGS: eax:0x00000064, ebx:0x00000001, ecx:0x00000001, edx:0x00000004, eip:0x00000017, esp:0x00000fff; FLAGS: F|F|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Base })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  698; REGS: eax:0x00000064, ebx:0x00000000, ecx:0x00000001, edx:0x00000004, eip:0x00000019, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  702; REGS: eax:0x00000064, ebx:0x00000000, ecx:0x00000001, edx:0x00000004, eip:0x0000000f, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Alter(AlterOpWord { opcode: Inc, arg: Data })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  707; REGS: eax:0x00000064, ebx:0x00000000, ecx:0x00000001, edx:0x00000005, eip:0x00000010, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegMemToReg(Accumulator, Data) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  719; REGS: eax:0x00000021, ebx:0x00000000, ecx:0x00000001, edx:0x00000005, eip:0x00000012, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Math(MathOpHigher { opcode: Mov, args: RegImmed(Base, 0) })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  724; REGS: eax:0x00000021, ebx:0x00000004, ecx:0x00000001, edx:0x00000005, eip:0x00000013, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Io(IoOpWord { opcode: Out, arg: 1 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  729; REGS: eax:0x00000021, ebx:0x00000004, ecx:0x00000001, edx:0x00000005, eip:0x00000014, esp:0x00000fff; FLAGS: F|F|F; INSTR: OpHigher(Alter(AlterOpWord { opcode: Dec, arg: Count })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  739; REGS: eax:0x00000021, ebx:0x00000004, ecx:0x00000000, edx:0x00000005, eip:0x00000016, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Branch(BranchOpHigher { opcode: Jz, arg_higher: 0 })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  743; REGS: eax:0x00000021, ebx:0x00000004, ecx:0x00000000, edx:0x00000005, eip:0x0000001e, esp:0x00000fff; FLAGS: F|T|T; INSTR: OpHigher(Stack(StackOpHigher { opcode: Ret, args: None })); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine::control_unit] TICK:  749; REGS: eax:0x00000021, ebx:0x00000004, ecx:0x00000000, edx:0x00000005, eip:0x0000000a, esp:0x00001000; FLAGS: F|T|T; INSTR: OpHigher(Control(ControlOpWord(Exit))); STATE: ExecuteInstruction { tick_count: 1 }
  [DEBUG lab3_rust::machine] Executed 100 instructions in 749 ticks
  [DEBUG lab3_rust::machine] Succesfully finished simulation

